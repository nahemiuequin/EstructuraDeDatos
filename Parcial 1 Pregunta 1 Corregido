//1 factorial
//2 series n pares desde 4 
//3 mover elementos de str a vector
#include <iostream>
#include <string>
#define VEC 1000

using namespace std;
int facto(int n);
void pares();
void strinve(string p,string vector[]);


int main()
{
	int opt, par, factorial;
	string palabra, vector[VEC];
	do
	{
		cout << "   MENU  " << endl;
		cout << "1.- Calcular factorial de un numero con recursividad" << endl;
		cout << " 2.- Mostrar una serie de los numeros ares empezando de 4" << endl;
		cout << "3.- Mover los elementos de un string a un vector" << endl;
		cout << "0.- Para salir del programa" << endl;
		cout << "Ingrese la opcion que desea" << endl;
		cin >> opt;
		switch (opt)
		{
    		case 1: do {
    			cout << "Ingrese el numero para calcular factorial" << endl;
    			cin >> factorial;
    		    } 
    		    while (factorial < 0); //contrario
    		    
		        cout << "El factorial es: " << facto(factorial) << endl;
		        break;
    		case 2: 
    		    pares();
    			break;
    		case 3:
    		    cout << "Ingrese el string: " << endl;
    			cin >> palabra;
    			strinve(palabra,  vector);


    			break;
    			
    		case 0: cout << "Salir" << endl;
    		   
    		default: cout << "No hay opciÃ³n" << endl;
    			break;

		}
	//	system("pause");
		//system("cls");
	} while (opt != 0);
}



int facto(int n)   // n = 3 
//  n=3 
//  3* facto(2 ) 
//  3 * 2 * facto(1 )
//  3 * 2 * 1 * facto(0 )
// 3 * 2 * 1 * 1 = 6

{
    int resp = 0;
	if (n == 0)
	{  
	    resp = 1;
		return resp;
	}
	else
	{
	    resp = n * facto(n - 1);
		return resp;
	}
}


void pares()
{
	int limite;
	cout << "Ingrese el limite de la serie: " << endl;
	cin >> limite;
	//limite = 5 
	
	cout<< "La serie de " << limite << " numeros es : \n";
	for (int i = 0; i < limite*2; i += 2)
	{
	    
		cout << i+4<<" , ";  // 4, 6, 8, 10, 12
	}
	cout << endl;
}


void strinve(string p, string vector[])
{
    
    //hola 
	int n = p.length();  // 4
	for (int i = 0; i < n; i++)
	{
		vector[i] = p[i];
		
		cout<<"V[ "<< i << "] = "<< vector[i] <<endl;
	}
}
